version: '3.8'
services:
  frontend:
    build:
      context: ./frontend/Lastnext
      dockerfile: Dockerfile
    container_name: nextjs-frontend
    restart: always
    environment:
      - NEXT_PUBLIC_API_BASE_URL=https://pmcs.site
      - API_URL=http://django-backend:8000
      - NEXT_PRIVATE_API_URL=http://django-backend:8000
      - NEXTAUTH_URL=https://pmcs.site
      - NEXTAUTH_SECRET=35babefb1ead519ffe44cc4817a5501aeb7a33635024ce3cdbe47c147fc74360
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  backend:
    build: 
      context: ./backend/myLubd
      dockerfile: Dockerfile
    container_name: django-backend
    restart: always
    volumes:
      - ./backend/myLubd/src:/app/src
      - static_volume:/app/src/static
      - media_volume:/app/src/media
    environment:
      - NEXTAUTH_SECRET=35babefb1ead519ffe44cc4817a5501aeb7a33635024ce3cdbe47c147fc74360
      - NEXTAUTH_URL=https://pmcs.site
      - NEXT_PUBLIC_API_URL=http://django-backend:8000
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1] pmcs.site www.pmcs.site django-backend
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=mylubd_db
      - SQL_USER=mylubd_user
      - SQL_PASSWORD=mylubd_password
      - SQL_HOST=db
      - SQL_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "8000:8000"
    networks:
      - app-network

  db:
    image: postgres:13
    container_name: postgres-db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=mylubd_db
      - POSTGRES_USER=mylubd_user
      - POSTGRES_PASSWORD=mylubd_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mylubd_user -d mylubd_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/cloudflare.conf:/etc/nginx/cloudflare.conf:ro
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    name: pmcs_network
    driver: bridge

volumes:
  postgres_data:
  static_volume:
    driver: local
  media_volume:
    driver: local